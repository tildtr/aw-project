Micro-Frontends (see also fe-services_components_view-models.xlsx file)

1. Login + Client Account Details:

Simplicity: Separating authentication concerns from other modules simplifies the development and maintenance process.
Single Responsibility: Handles user authentication and management of client account details exclusively.
Reusability: Can be reused across multiple parts of the application, ensuring a consistent authentication experience.
Independent Deployment: Can be deployed separately from other modules, allowing for updates without affecting the entire system.
Autonomous Teams: Dedicated team can focus solely on authentication and user account management, improving efficiency.
Responsibility: Responsible for managing user login/logout functionality and displaying client account details.

2. News + Statistics:

Vertical Services: Combining news and statistics related to meat industry provides a comprehensive view for users interested in industry updates.
Flexibility: Independent deployment allows for frequent updates to news articles and statistics without impacting other parts of the application.
Responsibility: Aggregates and presents current news articles and statistical data relevant to the meat industry.
Autonomous Teams: Dedicated team can focus solely on news around the topic and statistics of the meat products.

3. Select Supermarket + Categories Products and Highlights:

Single Responsibility: Focuses on assisting users in selecting supermarkets, browsing product categories, and accessing highlights.
Reusability: Can be reused across various sections where product selection and browsing are required.
Autonomous Teams: Dedicated team can manage supermarket selection, product categorization, and highlighting features independently.
Responsibility: Enables users to choose supermarkets, explore product categories, and view highlighted items within the meat section.

4. See Feedback + Expand Information:

Simplicity: Simplifies the user interface by separating feedback viewing and detailed information expansion functionalities.
Single Responsibility: Concentrates on displaying feedback and providing expanded information about specific meat products.
Independent Deployment: Allows for updates or enhancements to feedback or information expansion without affecting other areas of the application.
Responsibility: Displays user feedback and offers the option to expand on meat details or related information as requested.

5. Saved Products:

Single Responsibility: Solely focuses on managing and displaying saved products, ensuring clarity and simplicity for users.
Reusability: Can be utilized across various parts of the application where saved product functionality is required.
Independent Deployment: Enables updates or modifications to saved product features without impacting other modules.
Responsibility: Manages the display of products saved by the user for future reference or purchase consideration.
